//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SinTachiePlugin.Enums {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SinTachiePlugin.Enums.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   「セラール」と「アブリール」の値を足した結果でレイヤーを制御します。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_LyrAnmMd_CerrarPlusAbrir {
            get {
                return ResourceManager.GetString("Desc_LyrAnmMd_CerrarPlusAbrir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   「セラール」と「アブリール」の値を掛けた結果でレイヤーを制御します。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_LyrAnmMd_CerrarTimesAbrir {
            get {
                return ResourceManager.GetString("Desc_LyrAnmMd_CerrarTimesAbrir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   （セラール）～（アブリール）の範囲で「ループ」と同じ動きを定期的にします。
        ///(セラール)の値と(アブリール)の値の間を周期的に往復します。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_LyrAnmMd_PeriodicLoop {
            get {
                return ResourceManager.GetString("Desc_LyrAnmMd_PeriodicLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   （セラール）～（アブリール）の範囲で「往復」と同じ動きを定期的にします。
        ///(セラール)の値と(アブリール)の値の間を周期的に往復します。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_LyrAnmMd_PeriodicShuttle {
            get {
                return ResourceManager.GetString("Desc_LyrAnmMd_PeriodicShuttle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   「セラール」を振幅、「アブリール」を位相とするsin波でレイヤーを制御します。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_LyrAnmMd_Sin {
            get {
                return ResourceManager.GetString("Desc_LyrAnmMd_Sin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   （セラール）～（アブリール）の範囲で口パクします。
        ///口が閉じるときに(セラール)の値に、
        ///全開のときに(アブリール)の値になります。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_LyrAnmMd_VoiceVolume {
            get {
                return ResourceManager.GetString("Desc_LyrAnmMd_VoiceVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   0%~100%の範囲内でのみ変化
        ///0%以下の時はセラール、100%以上の時はアブリールの値になる。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_OutLyrVlMd_Limit {
            get {
                return ResourceManager.GetString("Desc_OutLyrVlMd_Limit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   100%ごとに同じ動きを繰り返す。
        ///例) ..| -100%(ｾﾗｰﾙ) ⇄ -0.1%(ｱﾌﾞﾘｰﾙ) | 0%(ｾﾗｰﾙ) ⇄ 99.9%(ｱﾌﾞﾘｰﾙ) | 100%(ｾﾗｰﾙ) ⇄ 199.9%(ｱﾌﾞﾘｰﾙ) |.. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_OutLyrVlMd_Loop {
            get {
                return ResourceManager.GetString("Desc_OutLyrVlMd_Loop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   100%ごとに実際の動きが反転する。
        ///例) ..⇄-200%(ｾﾗｰﾙ) ⇄ -100%(ｱﾌﾞﾘｰﾙ) ⇄ 0%(ｾﾗｰﾙ) ⇄ 100%(ｱﾌﾞﾘｰﾙ) ⇄ 200%(ｾﾗｰﾙ)⇄.. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_OutLyrVlMd_Shuttle {
            get {
                return ResourceManager.GetString("Desc_OutLyrVlMd_Shuttle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   このモードに設定されている同バス内のパーツ同士で描画順序を、あくまでバス内で変える。「バス順に表示」モードのパーツをバス内のZ座標を0として描画する。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_ZSortMode_BusScreen {
            get {
                return ResourceManager.GetString("Desc_ZSortMode_BusScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   このモードに設定されているパーツ同士で描画順序を変える。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_ZSortMode_GlobalSpace {
            get {
                return ResourceManager.GetString("Desc_ZSortMode_GlobalSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Z座標が描画順序に一切影響しない。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Desc_ZSortMode_Ignore {
            get {
                return ResourceManager.GetString("Desc_ZSortMode_Ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラー に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Color {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   焼き込みカラー に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_ColorBurn {
            get {
                return ResourceManager.GetString("Value_BlendSTP_ColorBurn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   覆い焼きカラー に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_ColorDodge {
            get {
                return ResourceManager.GetString("Value_BlendSTP_ColorDodge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   比較（暗） に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Darken {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Darken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラー比較（暗） に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_DarkerColor {
            get {
                return ResourceManager.GetString("Value_BlendSTP_DarkerColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   削除 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_DestinationOut {
            get {
                return ResourceManager.GetString("Value_BlendSTP_DestinationOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   背景 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_DestinationOver {
            get {
                return ResourceManager.GetString("Value_BlendSTP_DestinationOver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   差分 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Difference {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Difference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ディザ合成 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Dissolve {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Dissolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   除算 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Division {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Division", resourceCulture);
            }
        }
        
        /// <summary>
        ///   除外 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Exclusion {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Exclusion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ハードライト に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_HardLight {
            get {
                return ResourceManager.GetString("Value_BlendSTP_HardLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ハードミックス に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_HardMix {
            get {
                return ResourceManager.GetString("Value_BlendSTP_HardMix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   色相 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Hue {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Hue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   比較（明） に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Lighten {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Lighten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラー比較（明） に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_LighterColor {
            get {
                return ResourceManager.GetString("Value_BlendSTP_LighterColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   焼き込み（リニア） に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_LinearBurn {
            get {
                return ResourceManager.GetString("Value_BlendSTP_LinearBurn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   覆い焼き（リニア）-加算 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_LinearDodge {
            get {
                return ResourceManager.GetString("Value_BlendSTP_LinearDodge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   リニアライト に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_LinearLight {
            get {
                return ResourceManager.GetString("Value_BlendSTP_LinearLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   輝度 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Luminosity {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Luminosity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   反転マスク に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_MaskInverseErt {
            get {
                return ResourceManager.GetString("Value_BlendSTP_MaskInverseErt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   乗算 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Multiply {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Multiply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   オーバーレイ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Overlay {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Overlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ピンライト に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_PinLight {
            get {
                return ResourceManager.GetString("Value_BlendSTP_PinLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   加算 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Plus {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Plus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   彩度 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Saturation {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Saturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクリーン に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Screen {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Screen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ソフトライト に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_SoftLight {
            get {
                return ResourceManager.GetString("Value_BlendSTP_SoftLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   背景でクリッピング に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_SourceAtop {
            get {
                return ResourceManager.GetString("Value_BlendSTP_SourceAtop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   普通 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_SourceOver {
            get {
                return ResourceManager.GetString("Value_BlendSTP_SourceOver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   減算 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_Subtract {
            get {
                return ResourceManager.GetString("Value_BlendSTP_Subtract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ビビッドライト に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_VividLight {
            get {
                return ResourceManager.GetString("Value_BlendSTP_VividLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   重ならない部分のみ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_BlendSTP_XOR {
            get {
                return ResourceManager.GetString("Value_BlendSTP_XOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ２数の和 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_LyrAnmMd_CerrarPlusAbrir {
            get {
                return ResourceManager.GetString("Value_LyrAnmMd_CerrarPlusAbrir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ２数の積 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_LyrAnmMd_CerrarTimesAbrir {
            get {
                return ResourceManager.GetString("Value_LyrAnmMd_CerrarTimesAbrir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   周期的ループ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_LyrAnmMd_PeriodicLoop {
            get {
                return ResourceManager.GetString("Value_LyrAnmMd_PeriodicLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   周期的往復 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_LyrAnmMd_PeriodicShuttle {
            get {
                return ResourceManager.GetString("Value_LyrAnmMd_PeriodicShuttle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   sin に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_LyrAnmMd_Sin {
            get {
                return ResourceManager.GetString("Value_LyrAnmMd_Sin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   口パク に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_LyrAnmMd_VoiceVolume {
            get {
                return ResourceManager.GetString("Value_LyrAnmMd_VoiceVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   指定なし に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_OutLyrVlMd_Limit {
            get {
                return ResourceManager.GetString("Value_OutLyrVlMd_Limit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ループ に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_OutLyrVlMd_Loop {
            get {
                return ResourceManager.GetString("Value_OutLyrVlMd_Loop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   往復 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_OutLyrVlMd_Shuttle {
            get {
                return ResourceManager.GetString("Value_OutLyrVlMd_Shuttle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   バススクリーン内 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_ZSortMode_BusScreen {
            get {
                return ResourceManager.GetString("Value_ZSortMode_BusScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   グローバル空間内 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_ZSortMode_GlobalSpace {
            get {
                return ResourceManager.GetString("Value_ZSortMode_GlobalSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Z座標完全無視 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Value_ZSortMode_Ignore {
            get {
                return ResourceManager.GetString("Value_ZSortMode_Ignore", resourceCulture);
            }
        }
    }
}
